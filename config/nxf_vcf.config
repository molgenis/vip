includeConfig 'nxf.config'

env {
  CMD_ANNOTSV = "apptainer exec --no-mount home --bind \${TMPDIR} ${APPTAINER_CACHEDIR}/annotsv-3.3.6.sif AnnotSV"
  CMD_CAPICE = "apptainer exec --no-mount home --bind \${TMPDIR} ${APPTAINER_CACHEDIR}/capice-5.1.1.sif capice"
  CMD_GADO = "apptainer exec --no-mount home --bind \${TMPDIR} ${APPTAINER_CACHEDIR}/gado-1.0.3.sif"
  CMD_VEP = "apptainer exec --no-mount home --bind \${TMPDIR} ${APPTAINER_CACHEDIR}/vep-109.3.sif vep"
  CMD_FILTERVEP = "apptainer exec --no-mount home --bind \${TMPDIR} ${APPTAINER_CACHEDIR}/vep-109.3.sif filter_vep"
  CMD_STRANGER = "apptainer exec --no-mount home --bind \${TMPDIR} ${APPTAINER_CACHEDIR}/stranger-0.8.1.sif stranger"
  CMD_VCFREPORT="apptainer exec --no-mount home --bind \${TMPDIR} ${APPTAINER_CACHEDIR}/vcf-report-5.5.2.sif"
  CMD_VCFDECISIONTREE = "apptainer exec --no-mount home --bind \${TMPDIR} ${APPTAINER_CACHEDIR}/vcf-decision-tree-3.5.4.sif"
  CMD_VCFINHERITANCEMATCHER = "apptainer exec --no-mount home --bind \${TMPDIR} ${APPTAINER_CACHEDIR}/vcf-inheritance-matcher-2.1.7.sif"

  // workaround for SAMtools https://github.com/samtools/samtools/issues/1366#issuecomment-769170935
  REF_PATH = ":"
}

process {
  withLabel: 'vcf_validate' {
    memory = '100MB'
    time = '30m'
  }

  withLabel: 'vcf_split' {
    memory = '100MB'
    time = '30m'
  }

  withLabel:'vcf_annotate' {
    cpus = 4
    memory = '8GB'
    time = '4h'
  }

  withLabel:'vcf_classify|vcf_classify_samples|vcf_inheritance' {
    memory = '2GB'
  }

  withLabel: 'vcf_report' {
    memory = '4GB'
  }
}

params {
  vcf {  
    start = "" // allowed values: [normalize, annotate, classify, filter, inheritance, classify_samples, filter_samples]

    annotate {
      annotsv_cache_dir = "${projectDir}/resources/annotsv/v3.3.6"
      ensembl_gene_mapping = "${projectDir}/resources/biomart_ensembl_entrez_mapping.txt"

      gado_genes = "${projectDir}/resources/gado/v1.0.3/genes.txt"
      gado_hpo = "${projectDir}/resources/gado/v1.0.3/hp.obo"
      gado_predict_info = "${projectDir}/resources/gado/v1.0.3/HPO_2023_06_17_predictions_auc_bonf.txt.gz"
      gado_predict_matrix = "${projectDir}/resources/gado/v1.0.3/HPO_2023_06_17_predictions"
      vep_buffer_size = 1000
      vep_cache_dir = "${projectDir}/resources/vep/cache"
      vep_plugin_dir = "${projectDir}/resources/vep/plugins"
      vep_plugin_hpo = "${projectDir}/resources/hpo_20230822.tsv"
      vep_plugin_inheritance = "${projectDir}/resources/inheritance_20230608.tsv"
      vep_plugin_vkgl_mode = 1

      GRCh37 {
        capice_model = "${projectDir}/resources/GRCh37/capice_model_v5.1.1-v1.ubj"
        expansionhunter_variant_catalog = "${projectDir}/resources/GRCh37/expansionhunter_variant_catalog.json"
        stranger_catalog = "${projectDir}/resources/GRCh37/variant_catalog_grch37_fixed.json"
        vep_custom_gnomad = "${projectDir}/resources/GRCh37/gnomad.total.r2.1.1.sites.stripped.patch1.vcf.gz"
        vep_custom_clinvar = "${projectDir}/resources/GRCh37/clinvar_20230604.vcf.gz"
        // workaround for https://github.com/Ensembl/ensembl-vep/issues/1414
        vep_custom_phylop = "${projectDir}/resources/GRCh37/hg19.100way.phyloP100way.bed.gz"
        vep_plugin_spliceai_indel = "${projectDir}/resources/GRCh37/spliceai_scores.masked.indel.hg19.vcf.gz"
        vep_plugin_spliceai_snv = "${projectDir}/resources/GRCh37/spliceai_scores.masked.snv.hg19.vcf.gz"
        vep_plugin_utrannotator = "${projectDir}/resources/GRCh37/uORF_5UTR_PUBLIC.txt"
        vep_plugin_vkgl = "${projectDir}/resources/GRCh37/vkgl_consensus_20230401.tsv"
      }

      GRCh38 {
        capice_model = "${projectDir}/resources/GRCh38/capice_model_v5.1.1-v1.ubj"
        expansionhunter_variant_catalog = "${projectDir}/resources/GRCh38/expansionhunter_variant_catalog.json"
        stranger_catalog = "${projectDir}/resources/GRCh38/variant_catalog_grch38_fixed.json"
        vep_custom_gnomad = "${projectDir}/resources/GRCh38/gnomad.genomes.v3.1.2.sites.stripped.vcf.gz"
        vep_custom_clinvar = "${projectDir}/resources/GRCh38/clinvar_20230604.vcf.gz"
        // workaround for https://github.com/Ensembl/ensembl-vep/issues/1414
        vep_custom_phylop = "${projectDir}/resources/GRCh38/hg38.phyloP100way.bed.gz"
        vep_plugin_spliceai_indel = "${projectDir}/resources/GRCh38/spliceai_scores.masked.indel.hg38.vcf.gz"
        vep_plugin_spliceai_snv = "${projectDir}/resources/GRCh38/spliceai_scores.masked.snv.hg38.vcf.gz"
        vep_plugin_utrannotator = "${projectDir}/resources/GRCh38/uORF_5UTR_PUBLIC.txt"
        vep_plugin_vkgl = "${projectDir}/resources/GRCh38/vkgl_consensus_20230401.tsv"
      }
    }

    classify {
      annotate_labels = 0
      annotate_path = 1
      GRCh37 {
        decision_tree = "${projectDir}/resources/decision_tree_GRCh37.json"
      }
      GRCh38 {
        decision_tree = "${projectDir}/resources/decision_tree_GRCh38.json"
      }
    }

    classify_samples {
      annotate_labels = 0
      annotate_path = 1
      GRCh37 {
        decision_tree = "${projectDir}/resources/decision_tree_samples.json"
      }
      GRCh38 {
        decision_tree = "${projectDir}/resources/decision_tree_samples.json"
      }
    }

    filter {
      classes = "VUS,LP,P"
      consequences = true
    }

    filter_samples {
      classes = "MV,OK"
    }

    report {
      include_crams = true
      max_records = ""
      max_samples = ""
      template = ""
      
      GRCh37 {
        genes = "${projectDir}/resources/GRCh37/GCF_000001405.25_GRCh37.p13_genomic_g1k.gff.gz"
      }
      
      GRCh38 {
        genes = "${projectDir}/resources/GRCh38/GCF_000001405.39_GRCh38.p13_genomic_mapped.gff.gz"
      }
    }
  }
}
